-- Copyright (C) 2017  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel MegaCore Function License Agreement, or other 
-- applicable license agreement, including, without limitation, 
-- that your use is for the sole purpose of programming logic 
-- devices manufactured by Intel and sold by Intel or its 
-- authorized distributors.  Please refer to the applicable 
-- agreement for further details.

-- Quartus Prime generated Memory Initialization File (.mif)

WIDTH=32;
DEPTH=4096;

ADDRESS_RADIX=DEC;
DATA_RADIX=BIN;

CONTENT BEGIN
    -- main: nop
0000 : 00000000000000000000000000000000;
    -- add $15, $29, $0
0001 : 00000011111110100000000000000000;
    -- j main
0002 : 00001000000000000000000000000000;
    -- noop
0003 : 00000000000000000000000000000000;
    -- noop
0004 : 00000000000000000000000000000000;
    -- noop
0005 : 00000000000000000000000000000000;
    -- noop
0006 : 00000000000000000000000000000000;
    -- noop
0007 : 00000000000000000000000000000000;
    -- noop
0008 : 00000000000000000000000000000000;
    -- noop
0009 : 00000000000000000000000000000000;
    -- noop
0010 : 00000000000000000000000000000000;
    -- noop
0011 : 00000000000000000000000000000000;
    -- noop
0012 : 00000000000000000000000000000000;
    -- noop
0013 : 00000000000000000000000000000000;
    -- noop
0014 : 00000000000000000000000000000000;
    -- noop
0015 : 00000000000000000000000000000000;
    -- noop
0016 : 00000000000000000000000000000000;
    -- noop
0017 : 00000000000000000000000000000000;
    -- noop
0018 : 00000000000000000000000000000000;
    -- noop
0019 : 00000000000000000000000000000000;
    -- noop
0020 : 00000000000000000000000000000000;
    -- noop
0021 : 00000000000000000000000000000000;
    -- noop
0022 : 00000000000000000000000000000000;
    -- noop
0023 : 00000000000000000000000000000000;
    -- noop
0024 : 00000000000000000000000000000000;
    -- noop
0025 : 00000000000000000000000000000000;
    -- noop
0026 : 00000000000000000000000000000000;
    -- noop
0027 : 00000000000000000000000000000000;
    -- noop
0028 : 00000000000000000000000000000000;
    -- noop
0029 : 00000000000000000000000000000000;
    -- noop
0030 : 00000000000000000000000000000000;
    -- noop
0031 : 00000000000000000000000000000000;
    -- noop
0032 : 00000000000000000000000000000000;
    -- noop
0033 : 00000000000000000000000000000000;
    -- noop
0034 : 00000000000000000000000000000000;
    -- noop
0035 : 00000000000000000000000000000000;
    -- noop
0036 : 00000000000000000000000000000000;
    -- noop
0037 : 00000000000000000000000000000000;
    -- noop
0038 : 00000000000000000000000000000000;
    -- noop
0039 : 00000000000000000000000000000000;
    -- noop
0040 : 00000000000000000000000000000000;
    -- noop
0041 : 00000000000000000000000000000000;
    -- noop
0042 : 00000000000000000000000000000000;
    -- noop
0043 : 00000000000000000000000000000000;
    -- noop
0044 : 00000000000000000000000000000000;
    -- noop
0045 : 00000000000000000000000000000000;
    -- noop
0046 : 00000000000000000000000000000000;
    -- noop
0047 : 00000000000000000000000000000000;
    -- noop
0048 : 00000000000000000000000000000000;
    -- noop
0049 : 00000000000000000000000000000000;
    -- noop
0050 : 00000000000000000000000000000000;
    -- noop
0051 : 00000000000000000000000000000000;
    -- noop
0052 : 00000000000000000000000000000000;
    -- noop
0053 : 00000000000000000000000000000000;
    -- noop
0054 : 00000000000000000000000000000000;
    -- noop
0055 : 00000000000000000000000000000000;
    -- noop
0056 : 00000000000000000000000000000000;
    -- noop
0057 : 00000000000000000000000000000000;
    -- noop
0058 : 00000000000000000000000000000000;
    -- noop
0059 : 00000000000000000000000000000000;
    -- noop
0060 : 00000000000000000000000000000000;
    -- noop
0061 : 00000000000000000000000000000000;
    -- noop
0062 : 00000000000000000000000000000000;
    -- noop
0063 : 00000000000000000000000000000000;
    -- noop
0064 : 00000000000000000000000000000000;
    -- noop
0065 : 00000000000000000000000000000000;
    -- noop
0066 : 00000000000000000000000000000000;
    -- noop
0067 : 00000000000000000000000000000000;
    -- noop
0068 : 00000000000000000000000000000000;
    -- noop
0069 : 00000000000000000000000000000000;
    -- noop
0070 : 00000000000000000000000000000000;
    -- noop
0071 : 00000000000000000000000000000000;
    -- noop
0072 : 00000000000000000000000000000000;
    -- noop
0073 : 00000000000000000000000000000000;
    -- noop
0074 : 00000000000000000000000000000000;
    -- noop
0075 : 00000000000000000000000000000000;
    -- noop
0076 : 00000000000000000000000000000000;
    -- noop
0077 : 00000000000000000000000000000000;
    -- noop
0078 : 00000000000000000000000000000000;
    -- noop
0079 : 00000000000000000000000000000000;
    -- noop
0080 : 00000000000000000000000000000000;
    -- noop
0081 : 00000000000000000000000000000000;
    -- noop
0082 : 00000000000000000000000000000000;
    -- noop
0083 : 00000000000000000000000000000000;
    -- noop
0084 : 00000000000000000000000000000000;
    -- noop
0085 : 00000000000000000000000000000000;
    -- noop
0086 : 00000000000000000000000000000000;
    -- noop
0087 : 00000000000000000000000000000000;
    -- noop
0088 : 00000000000000000000000000000000;
    -- noop
0089 : 00000000000000000000000000000000;
    -- noop
0090 : 00000000000000000000000000000000;
    -- noop
0091 : 00000000000000000000000000000000;
    -- noop
0092 : 00000000000000000000000000000000;
    -- noop
0093 : 00000000000000000000000000000000;
    -- noop
0094 : 00000000000000000000000000000000;
    -- noop
0095 : 00000000000000000000000000000000;
    -- noop
0096 : 00000000000000000000000000000000;
    -- noop
0097 : 00000000000000000000000000000000;
    -- noop
0098 : 00000000000000000000000000000000;
    -- noop
0099 : 00000000000000000000000000000000;
    -- noop
0100 : 00000000000000000000000000000000;
    -- noop
0101 : 00000000000000000000000000000000;
    -- irs_start: nop
0102 : 00000000000000000000000000000000;
    -- lw $10, 0($0)
0103 : 01000010100000000000000000000000;
    -- bne $10, $0, 1
0104 : 00010010100000000000000000000001;
    -- j cont
0105 : 00001000000000000000000001101011;
    -- j invalid
0106 : 00001000000000000000001000010110;
    -- cont: nop
0107 : 00000000000000000000000000000000;
    -- lw $10, 1($0)
0108 : 01000010100000000000000000000001;
    -- addi $5, $0, 100
0109 : 00101001010000000000000001100100;
    -- addi $6, $0, 3000
0110 : 00101001100000000000101110111000;
    -- addi $7, $0, 6000
0111 : 00101001110000000001011101110000;
    -- addi $29, $0, 0
0112 : 00101111010000000000000000000000;
    -- bne $10, $0, 1
0113 : 00010010100000000000000000000001;
    -- j invalid
0114 : 00001000000000000000001000010110;
    -- j continueOne
0115 : 00001000000000000000000001110100;
    -- continueOne: nop
0116 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0117 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0118 : 00110010100011000000000000000010;
    -- blt $10, $7, 2
0119 : 00110010100011100000000000000010;
    -- j invalid
0120 : 00001000000000000000001000010110;
    -- j dot
0121 : 00001000000000000000000001111011;
    -- j dash
0122 : 00001000000000000000000101001000;
    -- dot: nop
0123 : 00000000000000000000000000000000;
    -- addi $29, $0, 69 #ascii for E is 69
0124 : 00101111010000000000000001000101;
    -- lw $10, 2($0) #lw t2 at address 2
0125 : 01000010100000000000000000000010;
    -- bne $10, $0, 1
0126 : 00010010100000000000000000000001;
    -- j end_decode
0127 : 00001000000000000000001000011000;
    -- j continueTwo
0128 : 00001000000000000000000010000001;
    -- continueTwo: nop
0129 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0130 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0131 : 00110010100011000000000000000010;
    -- blt $10, $7, 2
0132 : 00110010100011100000000000000010;
    -- j invalid
0133 : 00001000000000000000001000010110;
    -- j dotdot
0134 : 00001000000000000000000010001000;
    -- j dotdash
0135 : 00001000000000000000000010001110;
    -- dotdot: nop
0136 : 00000000000000000000000000000000;
    -- addi $29, $0, 73 #ascii for I is 73
0137 : 00101111010000000000000001001001;
    -- lw $10, 3($0) #lw t3 at address 3
0138 : 01000010100000000000000000000011;
    -- bne $10, $0, 1
0139 : 00010010100000000000000000000001;
    -- j end_decode
0140 : 00001000000000000000001000011000;
    -- j continueFour
0141 : 00001000000000000000000010100111;
    -- dotdash: nop
0142 : 00000000000000000000000000000000;
    -- addi $29, $0, 65 #ascii for A is 65
0143 : 00101111010000000000000001000001;
    -- lw $10, 3($0) #lw t3 at address 3
0144 : 01000010100000000000000000000011;
    -- bne $10, $0, 1
0145 : 00010010100000000000000000000001;
    -- j end_decode
0146 : 00001000000000000000001000011000;
    -- j continueThree
0147 : 00001000000000000000000010010100;
    -- continueThree: nop
0148 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0149 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0150 : 00110010100011000000000000000010;
    -- blt $10, $7, 2
0151 : 00110010100011100000000000000010;
    -- j invalid
0152 : 00001000000000000000001000010110;
    -- j dotdashdot
0153 : 00001000000000000000000010011011;
    -- j dotdashdash
0154 : 00001000000000000000000010100001;
    -- dotdashdot: nop
0155 : 00000000000000000000000000000000;
    -- addi $29, $0, 82 #ascii for R is 82
0156 : 00101111010000000000000001010010;
    -- lw $10, 4($0) #lw t4 at address 4
0157 : 01000010100000000000000000000100;
    -- bne $10, $0, 1
0158 : 00010010100000000000000000000001;
    -- j end_decode
0159 : 00001000000000000000001000011000;
    -- j continueSeven
0160 : 00001000000000000000000011100000;
    -- dotdashdash: nop
0161 : 00000000000000000000000000000000;
    -- addi $29, $0, 87 #ascii for W is 87
0162 : 00101111010000000000000001010111;
    -- lw $10, 4($0) #lw t4 at address 4
0163 : 01000010100000000000000000000100;
    -- bne $10, $0, 1
0164 : 00010010100000000000000000000001;
    -- j end_decode
0165 : 00001000000000000000001000011000;
    -- j continueEight
0166 : 00001000000000000000000011101111;
    -- continueFour: nop
0167 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0168 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0169 : 00110010100011000000000000000010;
    -- blt $10, $7, 2
0170 : 00110010100011100000000000000010;
    -- j invalid
0171 : 00001000000000000000001000010110;
    -- j dotdotdot
0172 : 00001000000000000000000010101110;
    -- j dotdotdash
0173 : 00001000000000000000000010110100;
    -- dotdotdot: nop
0174 : 00000000000000000000000000000000;
    -- addi $29, $0, 83 #ascii for S is 83
0175 : 00101111010000000000000001010011;
    -- lw $10, 4($0) #lw t4 at address 4
0176 : 01000010100000000000000000000100;
    -- bne $10, $0, 1
0177 : 00010010100000000000000000000001;
    -- j end_decode
0178 : 00001000000000000000001000011000;
    -- j continueFive
0179 : 00001000000000000000000010111010;
    -- dotdotdash: nop
0180 : 00000000000000000000000000000000;
    -- addi $29, $0, 85 #ascii for U is 85
0181 : 00101111010000000000000001010101;
    -- lw $10, 4($0) #lw t4 at address 4
0182 : 01000010100000000000000000000100;
    -- bne $10, $0, 1
0183 : 00010010100000000000000000000001;
    -- j end_decode
0184 : 00001000000000000000001000011000;
    -- j continueSix
0185 : 00001000000000000000000011001110;
    -- continueFive: nop
0186 : 00000000000000000000000000000000;
    -- noop
0187 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0188 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0189 : 00110010100011000000000000000010;
    -- blt $10, $7, 2
0190 : 00110010100011100000000000000010;
    -- j invalid
0191 : 00001000000000000000001000010110;
    -- j dotdotdotdot
0192 : 00001000000000000000000011000010;
    -- j dotdotdotdash
0193 : 00001000000000000000000011001000;
    -- dotdotdotdot: nop
0194 : 00000000000000000000000000000000;
    -- addi $29, $0, 72 #ascii for H is 72
0195 : 00101111010000000000000001001000;
    -- lw $10, 5($0) #lw t5 at address 5
0196 : 01000010100000000000000000000101;
    -- bne $10, $0, 1
0197 : 00010010100000000000000000000001;
    -- j end_decode
0198 : 00001000000000000000001000011000;
    -- j continueNine
0199 : 00001000000000000000000100000010;
    -- dotdotdotdash: nop
0200 : 00000000000000000000000000000000;
    -- addi $29, $0, 86 #ascii for H is 86
0201 : 00101111010000000000000001010110;
    -- lw $10, 5($0) #lw t5 at address 5
0202 : 01000010100000000000000000000101;
    -- bne $10, $0, 1
0203 : 00010010100000000000000000000001;
    -- j end_decode
0204 : 00001000000000000000001000011000;
    -- j continueTen
0205 : 00001000000000000000000100001111;
    -- continueSix: nop
0206 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0207 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0208 : 00110010100011000000000000000010;
    -- blt $10, $7, 2
0209 : 00110010100011100000000000000010;
    -- j invalid
0210 : 00001000000000000000001000010110;
    -- j dotdotdashdot
0211 : 00001000000000000000000011010101;
    -- j dotdotdashdash
0212 : 00001000000000000000000011011011;
    -- dotdotdashdot: nop
0213 : 00000000000000000000000000000000;
    -- addi $29, $0, 70 #ascii for F is 70
0214 : 00101111010000000000000001000110;
    -- lw $10, 5($0) #lw t5 at address 5
0215 : 01000010100000000000000000000101;
    -- bne $10, $0, 1
0216 : 00010010100000000000000000000001;
    -- j end_decode
0217 : 00001000000000000000001000011000;
    -- j continueEleven
0218 : 00001000000000000000000100011011;
    -- dotdotdashdash: nop
0219 : 00000000000000000000000000000000;
    -- lw $10, 5($0) #lw t5 at address 5
0220 : 01000010100000000000000000000101;
    -- bne $10, $0, 1
0221 : 00010010100000000000000000000001;
    -- j non_existent
0222 : 00001000000000000000001000010100;
    -- j continueTwelve
0223 : 00001000000000000000000100100110;
    -- continueSeven: nop
0224 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0225 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0226 : 00110010100011000000000000000010;
    -- blt $10, $7, 2
0227 : 00110010100011100000000000000010;
    -- j invalid
0228 : 00001000000000000000001000010110;
    -- j dotdashdotdot
0229 : 00001000000000000000000011100111;
    -- j dotdashdotdash
0230 : 00001000000000000000000011101101;
    -- dotdashdotdot: nop
0231 : 00000000000000000000000000000000;
    -- addi $29, $0, 76 #ascii for L is 76
0232 : 00101111010000000000000001001100;
    -- lw $10, 5($0) #lw t5 at address 5
0233 : 01000010100000000000000000000101;
    -- bne $10, $0, 1
0234 : 00010010100000000000000000000001;
    -- j end_decode
0235 : 00001000000000000000001000011000;
    -- j continueThirteen
0236 : 00001000000000000000000100110010;
    -- dotdashdotdash: nop
0237 : 00000000000000000000000000000000;
    -- j non_existent
0238 : 00001000000000000000001000010100;
    -- continueEight: nop
0239 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0240 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0241 : 00110010100011000000000000000010;
    -- blt $10, $7, 2
0242 : 00110010100011100000000000000010;
    -- j invalid
0243 : 00001000000000000000001000010110;
    -- j dotdashdashdot
0244 : 00001000000000000000000011110110;
    -- j dotdashdashdash
0245 : 00001000000000000000000011111100;
    -- dotdashdashdot: nop
0246 : 00000000000000000000000000000000;
    -- addi $29, $0, 80 #ascii for F is 80
0247 : 00101111010000000000000001010000;
    -- lw $10, 5($0) #lw t5 at address 5
0248 : 01000010100000000000000000000101;
    -- bne $10, $0, 1
0249 : 00010010100000000000000000000001;
    -- j end_decode
0250 : 00001000000000000000001000011000;
    -- j continueFourteen
0251 : 00001000000000000000000100111000;
    -- dotdashdashdash: nop
0252 : 00000000000000000000000000000000;
    -- addi $29, $0, 74 #ascii for J is 74
0253 : 00101111010000000000000001001010;
    -- lw $10, 5($0) #lw t5 at address 5
0254 : 01000010100000000000000000000101;
    -- bne $10, $0, 1
0255 : 00010010100000000000000000000001;
    -- j end_decode
0256 : 00001000000000000000001000011000;
    -- j continueFifteen
0257 : 00001000000000000000000100111110;
    -- continueNine: nop
0258 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0259 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0260 : 00110010100011000000000000000010;
    -- blt $10, $7, 2
0261 : 00110010100011100000000000000010;
    -- j invalid
0262 : 00001000000000000000001000010110;
    -- j dotdotdotdotdot
0263 : 00001000000000000000000100001001;
    -- j dotdotdotdotdash
0264 : 00001000000000000000000100001100;
    -- dotdotdotdotdot: nop
0265 : 00000000000000000000000000000000;
    -- addi $29, $0, 53 #ascii for 5 is 53
0266 : 00101111010000000000000000110101;
    -- j end_decode
0267 : 00001000000000000000001000011000;
    -- dotdotdotdotdash: nop
0268 : 00000000000000000000000000000000;
    -- addi $29, $0, 52 #ascii for 4 is 52
0269 : 00101111010000000000000000110100;
    -- j end_decode
0270 : 00001000000000000000001000011000;
    -- continueTen: nop
0271 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0272 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0273 : 00110010100011000000000000000010;
    -- blt $10, $7, 2
0274 : 00110010100011100000000000000010;
    -- j invalid
0275 : 00001000000000000000001000010110;
    -- j dotdotdotdashdot
0276 : 00001000000000000000000100010110;
    -- j dotdotdotdashdash
0277 : 00001000000000000000000100011000;
    -- dotdotdotdashdot: nop
0278 : 00000000000000000000000000000000;
    -- j non_existent
0279 : 00001000000000000000001000010100;
    -- dotdotdotdashdash: nop
0280 : 00000000000000000000000000000000;
    -- addi $29, $0, 51 #ascii for 3 is 51
0281 : 00101111010000000000000000110011;
    -- j end_decode
0282 : 00001000000000000000001000011000;
    -- continueEleven: nop
0283 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0284 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0285 : 00110010100011000000000000000010;
    -- blt $10, $7, 2
0286 : 00110010100011100000000000000010;
    -- j invalid
0287 : 00001000000000000000001000010110;
    -- j dotdotdashdotdot
0288 : 00001000000000000000000100100010;
    -- j dotdotdashdotdash
0289 : 00001000000000000000000100100100;
    -- dotdotdashdotdot: nop
0290 : 00000000000000000000000000000000;
    -- j non_existent
0291 : 00001000000000000000001000010100;
    -- dotdotdashdotdash: nop
0292 : 00000000000000000000000000000000;
    -- j non_existent
0293 : 00001000000000000000001000010100;
    -- continueTwelve: nop
0294 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0295 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0296 : 00110010100011000000000000000010;
    -- blt $10, $7, 2
0297 : 00110010100011100000000000000010;
    -- j invalid
0298 : 00001000000000000000001000010110;
    -- j dotdotdashdashdot
0299 : 00001000000000000000000100101101;
    -- j dotdotdashdashdash
0300 : 00001000000000000000000100101111;
    -- dotdotdashdashdot: nop
0301 : 00000000000000000000000000000000;
    -- j non_existent
0302 : 00001000000000000000001000010100;
    -- dotdotdashdashdash: nop
0303 : 00000000000000000000000000000000;
    -- addi $29, $0, 50 #ascii for 2 is 50
0304 : 00101111010000000000000000110010;
    -- j end_decode
0305 : 00001000000000000000001000011000;
    -- continueThirteen: nop
0306 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0307 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0308 : 00110010100011000000000000000010;
    -- blt $10, $7, 1
0309 : 00110010100011100000000000000001;
    -- j invalid
0310 : 00001000000000000000001000010110;
    -- j non_existent
0311 : 00001000000000000000001000010100;
    -- continueFourteen: nop
0312 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0313 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0314 : 00110010100011000000000000000010;
    -- blt $10, $7, 1
0315 : 00110010100011100000000000000001;
    -- j invalid
0316 : 00001000000000000000001000010110;
    -- j non_existent
0317 : 00001000000000000000001000010100;
    -- continueFifteen: nop
0318 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0319 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0320 : 00110010100011000000000000000010;
    -- blt $10, $7, 2
0321 : 00110010100011100000000000000010;
    -- j invalid
0322 : 00001000000000000000001000010110;
    -- j dotdashdashdashdash
0323 : 00001000000000000000000101000101;
    -- j non_existent
0324 : 00001000000000000000001000010100;
    -- dotdashdashdashdash: nop
0325 : 00000000000000000000000000000000;
    -- addi $29, $0, 49 #ascii for 1 is 49
0326 : 00101111010000000000000000110001;
    -- j end_decode
0327 : 00001000000000000000001000011000;
    -- dash: nop
0328 : 00000000000000000000000000000000;
    -- addi $29, $0, 84 #ascii for T is 84
0329 : 00101111010000000000000001010100;
    -- lw $10, 2($0) #lw t2 at address 2
0330 : 01000010100000000000000000000010;
    -- bne $10, $0, 1
0331 : 00010010100000000000000000000001;
    -- j end_decode
0332 : 00001000000000000000001000011000;
    -- j dashContTwo
0333 : 00001000000000000000000101001110;
    -- dashContTwo: nop
0334 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0335 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0336 : 00110010100011000000000000000010;
    -- blt $10, $7, 2
0337 : 00110010100011100000000000000010;
    -- j invalid
0338 : 00001000000000000000001000010110;
    -- j dashdot
0339 : 00001000000000000000000101010101;
    -- j dashdash
0340 : 00001000000000000000000101011011;
    -- dashdot: nop
0341 : 00000000000000000000000000000000;
    -- addi $29, $0, 78 #ascii for N is 78
0342 : 00101111010000000000000001001110;
    -- lw $10, 3($0) #lw t3 at address 3
0343 : 01000010100000000000000000000011;
    -- bne $10, $0, 1
0344 : 00010010100000000000000000000001;
    -- j end_decode
0345 : 00001000000000000000001000011000;
    -- j dashContThree
0346 : 00001000000000000000000101100001;
    -- dashdash: nop
0347 : 00000000000000000000000000000000;
    -- addi $29, $0, 77 #ascii for M is 77
0348 : 00101111010000000000000001001101;
    -- lw $10, 3($0) #lw t5 at address 5
0349 : 01000010100000000000000000000011;
    -- bne $10, $0, 1
0350 : 00010010100000000000000000000001;
    -- j end_decode
0351 : 00001000000000000000001000011000;
    -- j dashContFour
0352 : 00001000000000000000000101110100;
    -- dashContThree: nop
0353 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0354 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0355 : 00110010100011000000000000000010;
    -- blt $10, $7, 2
0356 : 00110010100011100000000000000010;
    -- j invalid
0357 : 00001000000000000000001000010110;
    -- j dashdotdot
0358 : 00001000000000000000000101101000;
    -- j dashdotdash
0359 : 00001000000000000000000101101110;
    -- dashdotdot: nop
0360 : 00000000000000000000000000000000;
    -- addi $29, $0, 68 #ascii for D is 68
0361 : 00101111010000000000000001000100;
    -- lw $10, 4($0) #lw t4 at address 4
0362 : 01000010100000000000000000000100;
    -- bne $10, $0, 1
0363 : 00010010100000000000000000000001;
    -- j end_decode
0364 : 00001000000000000000001000011000;
    -- j dashContFive
0365 : 00001000000000000000000110000111;
    -- dashdotdash: nop
0366 : 00000000000000000000000000000000;
    -- addi $29, $0, 75 #ascii for K is 75
0367 : 00101111010000000000000001001011;
    -- lw $10, 4($0) #lw t4 at address 4
0368 : 01000010100000000000000000000100;
    -- bne $10, $0, 1
0369 : 00010010100000000000000000000001;
    -- j end_decode
0370 : 00001000000000000000001000011000;
    -- j dashContSix
0371 : 00001000000000000000000110011010;
    -- dashContFour: nop
0372 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0373 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0374 : 00110010100011000000000000000010;
    -- blt $10, $7, 2
0375 : 00110010100011100000000000000010;
    -- j invalid
0376 : 00001000000000000000001000010110;
    -- j dashdashdot
0377 : 00001000000000000000000101111011;
    -- j dashdashdash
0378 : 00001000000000000000000110000001;
    -- dashdashdot: nop
0379 : 00000000000000000000000000000000;
    -- addi $29, $0, 71 #ascii for G is 71
0380 : 00101111010000000000000001000111;
    -- lw $10, 4($0) #lw t4 at address 4
0381 : 01000010100000000000000000000100;
    -- bne $10, $0, 1
0382 : 00010010100000000000000000000001;
    -- j end_decode
0383 : 00001000000000000000001000011000;
    -- j dashContSeven
0384 : 00001000000000000000000110101101;
    -- dashdashdash: nop
0385 : 00000000000000000000000000000000;
    -- addi $29, $0, 79 #ascii for O is 79
0386 : 00101111010000000000000001001111;
    -- lw $10, 4($0) #lw t4 at address 4
0387 : 01000010100000000000000000000100;
    -- bne $10, $0, 1
0388 : 00010010100000000000000000000001;
    -- j end_decode
0389 : 00001000000000000000001000011000;
    -- j dashContEight
0390 : 00001000000000000000000111000000;
    -- dashContFive: nop
0391 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0392 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0393 : 00110010100011000000000000000010;
    -- blt $10, $7, 2
0394 : 00110010100011100000000000000010;
    -- j invalid
0395 : 00001000000000000000001000010110;
    -- j dashdotdotdot
0396 : 00001000000000000000000110001110;
    -- j dashdotdotdash
0397 : 00001000000000000000000110010100;
    -- dashdotdotdot: nop
0398 : 00000000000000000000000000000000;
    -- addi $29, $0, 66 #ascii for B is 66
0399 : 00101111010000000000000001000010;
    -- lw $10, 5($0) #lw t5 at address 5
0400 : 01000010100000000000000000000101;
    -- bne $10, $0, 1
0401 : 00010010100000000000000000000001;
    -- j end_decode
0402 : 00001000000000000000001000011000;
    -- j dashContNine
0403 : 00001000000000000000000111010001;
    -- dashdotdotdash: nop
0404 : 00000000000000000000000000000000;
    -- addi $29, $0, 88 #ascii for X is 88
0405 : 00101111010000000000000001011000;
    -- lw $10, 5($0) #lw t5 at address 5
0406 : 01000010100000000000000000000101;
    -- bne $10, $0, 1
0407 : 00010010100000000000000000000001;
    -- j end_decode
0408 : 00001000000000000000001000011000;
    -- j dashContTen
0409 : 00001000000000000000000111011011;
    -- dashContSix: nop
0410 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0411 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0412 : 00110010100011000000000000000010;
    -- blt $10, $7, 2
0413 : 00110010100011100000000000000010;
    -- j invalid
0414 : 00001000000000000000001000010110;
    -- j dashdotdashdot
0415 : 00001000000000000000000110100001;
    -- j dashdotdashdash
0416 : 00001000000000000000000110100111;
    -- dashdotdashdot: nop
0417 : 00000000000000000000000000000000;
    -- addi $29, $0, 67 #ascii for C is 67
0418 : 00101111010000000000000001000011;
    -- lw $10, 5($0) #lw t5 at address 5
0419 : 01000010100000000000000000000101;
    -- bne $10, $0, 1
0420 : 00010010100000000000000000000001;
    -- j end_decode
0421 : 00001000000000000000001000011000;
    -- j dashContEleven
0422 : 00001000000000000000000111100001;
    -- dashdotdashdash: nop
0423 : 00000000000000000000000000000000;
    -- addi $29, $0, 89 #ascii for Y is 89
0424 : 00101111010000000000000001011001;
    -- lw $10, 5($0) #lw t5 at address 5
0425 : 01000010100000000000000000000101;
    -- bne $10, $0, 1
0426 : 00010010100000000000000000000001;
    -- j end_decode
0427 : 00001000000000000000001000011000;
    -- j dashContTwelve
0428 : 00001000000000000000000111100111;
    -- dashContSeven: nop
0429 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0430 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0431 : 00110010100011000000000000000010;
    -- blt $10, $7, 2
0432 : 00110010100011100000000000000010;
    -- j invalid
0433 : 00001000000000000000001000010110;
    -- j dashdashdotdot
0434 : 00001000000000000000000110110100;
    -- j dashdashdotdash
0435 : 00001000000000000000000110111010;
    -- dashdashdotdot: nop
0436 : 00000000000000000000000000000000;
    -- addi $29, $0, 90 #ascii for Z is 90
0437 : 00101111010000000000000001011010;
    -- lw $10, 5($0) #lw t5 at address 5
0438 : 01000010100000000000000000000101;
    -- bne $10, $0, 1
0439 : 00010010100000000000000000000001;
    -- j end_decode
0440 : 00001000000000000000001000011000;
    -- j dashContThirteen
0441 : 00001000000000000000000111101101;
    -- dashdashdotdash: nop
0442 : 00000000000000000000000000000000;
    -- addi $29, $0, 81 #ascii for Q is 81
0443 : 00101111010000000000000001010001;
    -- lw $10, 5($0) #lw t5 at address 5
0444 : 01000010100000000000000000000101;
    -- bne $10, $0, 1
0445 : 00010010100000000000000000000001;
    -- j end_decode
0446 : 00001000000000000000001000011000;
    -- j dashContFourteen
0447 : 00001000000000000000000111110111;
    -- dashContEight: nop
0448 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0449 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0450 : 00110010100011000000000000000010;
    -- blt $10, $7, 2
0451 : 00110010100011100000000000000010;
    -- j invalid
0452 : 00001000000000000000001000010110;
    -- j dashdashdashdot
0453 : 00001000000000000000000111000111;
    -- j dashdashdashdash
0454 : 00001000000000000000000111001100;
    -- dashdashdashdot: nop
0455 : 00000000000000000000000000000000;
    -- lw $10, 5($0) #lw t5 at address 5
0456 : 01000010100000000000000000000101;
    -- bne $10, $0, 1
0457 : 00010010100000000000000000000001;
    -- j non_existent
0458 : 00001000000000000000001000010100;
    -- j dashContFifteen
0459 : 00001000000000000000000111111101;
    -- dashdashdashdash: nop
0460 : 00000000000000000000000000000000;
    -- lw $10, 5($0) #lw t5 at address 5
0461 : 01000010100000000000000000000101;
    -- bne $10, $0, 1
0462 : 00010010100000000000000000000001;
    -- j non_existent
0463 : 00001000000000000000001000010100;
    -- j dashContSixteen
0464 : 00001000000000000000001000000111;
    -- dashContNine: nop
0465 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0466 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0467 : 00110010100011000000000000000010;
    -- blt $10, $7, 2
0468 : 00110010100011100000000000000010;
    -- j invalid
0469 : 00001000000000000000001000010110;
    -- j dashdotdotdotdot
0470 : 00001000000000000000000111011000;
    -- j non_existent
0471 : 00001000000000000000001000010100;
    -- dashdotdotdotdot: nop
0472 : 00000000000000000000000000000000;
    -- addi $29, $0, 54 #ascii for 6 is 54
0473 : 00101111010000000000000000110110;
    -- j end_decode
0474 : 00001000000000000000001000011000;
    -- dashContTen: nop
0475 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0476 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0477 : 00110010100011000000000000000010;
    -- blt $10, $7, 1
0478 : 00110010100011100000000000000001;
    -- j invalid
0479 : 00001000000000000000001000010110;
    -- j non_existent
0480 : 00001000000000000000001000010100;
    -- dashContEleven: nop
0481 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0482 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0483 : 00110010100011000000000000000010;
    -- blt $10, $7, 1
0484 : 00110010100011100000000000000001;
    -- j invalid
0485 : 00001000000000000000001000010110;
    -- j non_existent
0486 : 00001000000000000000001000010100;
    -- dashContTwelve: nop
0487 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0488 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0489 : 00110010100011000000000000000010;
    -- blt $10, $7, 1
0490 : 00110010100011100000000000000001;
    -- j invalid
0491 : 00001000000000000000001000010110;
    -- j non_existent
0492 : 00001000000000000000001000010100;
    -- dashContThirteen: nop
0493 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0494 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0495 : 00110010100011000000000000000010;
    -- blt $10, $7, 2
0496 : 00110010100011100000000000000010;
    -- j invalid
0497 : 00001000000000000000001000010110;
    -- j dashdashdotdotdot
0498 : 00001000000000000000000111110100;
    -- j non_existent
0499 : 00001000000000000000001000010100;
    -- dashdashdotdotdot: nop
0500 : 00000000000000000000000000000000;
    -- addi $29, $0, 55 #ascii for 7 is 55
0501 : 00101111010000000000000000110111;
    -- j end_decode
0502 : 00001000000000000000001000011000;
    -- dashContFourteen: nop
0503 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0504 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0505 : 00110010100011000000000000000010;
    -- blt $10, $7, 1
0506 : 00110010100011100000000000000001;
    -- j invalid
0507 : 00001000000000000000001000010110;
    -- j non_existent
0508 : 00001000000000000000001000010100;
    -- dashContFifteen: nop
0509 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0510 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0511 : 00110010100011000000000000000010;
    -- blt $10, $7, 2
0512 : 00110010100011100000000000000010;
    -- j invalid
0513 : 00001000000000000000001000010110;
    -- j dashdashdashdotdot
0514 : 00001000000000000000001000000100;
    -- j non_existent
0515 : 00001000000000000000001000010100;
    -- dashdashdashdotdot: nop
0516 : 00000000000000000000000000000000;
    -- addi $29, $0, 56 #ascii for 8 is 56
0517 : 00101111010000000000000000111000;
    -- j end_decode
0518 : 00001000000000000000001000011000;
    -- dashContSixteen: nop
0519 : 00000000000000000000000000000000;
    -- blt $10, $5, 2
0520 : 00110010100010100000000000000010;
    -- blt $10, $6, 2
0521 : 00110010100011000000000000000010;
    -- blt $10, $7, 2
0522 : 00110010100011100000000000000010;
    -- j invalid
0523 : 00001000000000000000001000010110;
    -- j dashdashdashdashdot
0524 : 00001000000000000000001000001110;
    -- j dashdashdashdashdash
0525 : 00001000000000000000001000010001;
    -- dashdashdashdashdot: nop
0526 : 00000000000000000000000000000000;
    -- addi $29, $0, 57 #ascii for 9 is 57
0527 : 00101111010000000000000000111001;
    -- j end_decode
0528 : 00001000000000000000001000011000;
    -- dashdashdashdashdash: nop
0529 : 00000000000000000000000000000000;
    -- addi $29, $0, 48 #ascii for 0 is 48
0530 : 00101111010000000000000000110000;
    -- j end_decode
0531 : 00001000000000000000001000011000;
    -- non_existent: nop
0532 : 00000000000000000000000000000000;
    -- j invalid
0533 : 00001000000000000000001000010110;
    -- invalid: nop
0534 : 00000000000000000000000000000000;
    -- addi $29, $0, 999999
0535 : 00101111010000010100001000111111;
    -- end_decode: nop
0536 : 00000000000000000000000000000000;
    -- noop
0537 : 00000000000000000000000000000000;
    -- noop
0538 : 00000000000000000000000000000000;
    -- noop
0539 : 00000000000000000000000000000000;
    -- jr $ra
0540 : 00100111110000000000000000000000;
    -- .data
0541 : 00000000000000000000000000000000;
[0542 .. 4095] : 00000000000000000000000000000000;

END;


